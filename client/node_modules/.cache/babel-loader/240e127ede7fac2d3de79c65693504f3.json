{"ast":null,"code":"var _jsxFileName = \"/Users/Angelique/Desktop/AnGeLiQuE/Spiced Academy/repositories/coding_challenges/mckinsey/src/components/BugList.js\";\nimport React, { useState } from 'react';\nimport { TrashIcon, AppContainer, Heading, SearchContainer, Container, Table, ClearAllContainer, ClearAll, Regular, EmptyPrompt, EmptySpace } from './elements';\nimport ListItem from './ListItem';\n\nconst BugList = () => {\n  const [items, setItems] = useState([{\n    id: 1,\n    state: true,\n    text: 'Get up early'\n  }, {\n    id: 2,\n    state: true,\n    text: 'Do some meditation'\n  }, {\n    id: 3,\n    state: false,\n    text: 'Eat a healthy breakfast'\n  }, {\n    id: 4,\n    state: false,\n    text: 'Drink plenty of water'\n  }, {\n    id: 5,\n    done: false,\n    text: 'Exercise'\n  }, {\n    id: 6,\n    done: false,\n    text: 'Have fun'\n  }]);\n  const [text, setText] = useState('');\n\n  const trashHandler = id => {\n    const newItems = [...items];\n    const itemIndex = newItems.findIndex(item => item.id === id);\n    newItems.splice(itemIndex, 1);\n    setItems(newItems);\n  };\n\n  const trashAllHandler = () => setItems([]);\n\n  const tickHandler = id => {\n    const newItems = [...items];\n    const itemIndex = newItems.findIndex(item => item.id === id);\n    newItems[itemIndex].done = !newItems[itemIndex].done;\n    setItems(newItems);\n  };\n\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && e.target.value) {\n      inputHandler(e);\n    }\n  };\n\n  const inputHandler = e => {\n    const newItem = {\n      id: items.length + 1,\n      done: false,\n      text: e.target.value\n    };\n    const newItems = [...items, newItem];\n    setItems(newItems);\n    setText('');\n  };\n\n  return /*#__PURE__*/React.createElement(AppContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Reports\"), /*#__PURE__*/React.createElement(SearchContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, items.length === 0 && /*#__PURE__*/React.createElement(EmptyPrompt, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Regular, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Add some things to your to do list!\")), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(ListItem, {\n    key: item.id,\n    item: item,\n    tickHandler: tickHandler,\n    trashHandler: trashHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })))))), items.length ? /*#__PURE__*/React.createElement(ClearAllContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ClearAll, {\n    onClick: trashAllHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TrashIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), \"Clear all\")) : '');\n};\n\nexport default BugList;","map":{"version":3,"sources":["/Users/Angelique/Desktop/AnGeLiQuE/Spiced Academy/repositories/coding_challenges/mckinsey/src/components/BugList.js"],"names":["React","useState","TrashIcon","AppContainer","Heading","SearchContainer","Container","Table","ClearAllContainer","ClearAll","Regular","EmptyPrompt","EmptySpace","ListItem","BugList","items","setItems","id","state","text","done","setText","trashHandler","newItems","itemIndex","findIndex","item","splice","trashAllHandler","tickHandler","handleKeyDown","e","key","target","value","inputHandler","newItem","length","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,SADF,EAEEC,YAFF,EAGEC,OAHF,EAIEC,eAJF,EAKEC,SALF,EAMEC,KANF,EAOEC,iBAPF,EAQEC,QARF,EASEC,OATF,EAUEC,WAVF,EAWEC,UAXF,QAYO,YAZP;AAaA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,CACjC;AAAEgB,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,IAAhB;AAAsBC,IAAAA,IAAI,EAAE;AAA5B,GADiC,EAEjC;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,IAAhB;AAAsBC,IAAAA,IAAI,EAAE;AAA5B,GAFiC,EAGjC;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,KAAhB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAHiC,EAIjC;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,KAAhB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAJiC,EAKjC;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,IAAI,EAAE,KAAf;AAAsBD,IAAAA,IAAI,EAAE;AAA5B,GALiC,EAMjC;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,IAAI,EAAE,KAAf;AAAsBD,IAAAA,IAAI,EAAE;AAA5B,GANiC,CAAD,CAAlC;AAQA,QAAM,CAACA,IAAD,EAAOE,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMqB,YAAY,GAAIL,EAAD,IAAQ;AAC3B,UAAMM,QAAQ,GAAG,CAAC,GAAGR,KAAJ,CAAjB;AACA,UAAMS,SAAS,GAAGD,QAAQ,CAACE,SAAT,CAAoBC,IAAD,IAAUA,IAAI,CAACT,EAAL,KAAYA,EAAzC,CAAlB;AACAM,IAAAA,QAAQ,CAACI,MAAT,CAAgBH,SAAhB,EAA2B,CAA3B;AACAR,IAAAA,QAAQ,CAACO,QAAD,CAAR;AACD,GALD;;AAMA,QAAMK,eAAe,GAAG,MAAMZ,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMa,WAAW,GAAIZ,EAAD,IAAQ;AAC1B,UAAMM,QAAQ,GAAG,CAAC,GAAGR,KAAJ,CAAjB;AACA,UAAMS,SAAS,GAAGD,QAAQ,CAACE,SAAT,CAAoBC,IAAD,IAAUA,IAAI,CAACT,EAAL,KAAYA,EAAzC,CAAlB;AACAM,IAAAA,QAAQ,CAACC,SAAD,CAAR,CAAoBJ,IAApB,GAA2B,CAACG,QAAQ,CAACC,SAAD,CAAR,CAAoBJ,IAAhD;AACAJ,IAAAA,QAAQ,CAACO,QAAD,CAAR;AACD,GALD;;AAMA,QAAMO,aAAa,GAAIC,CAAD,IAAO;AAC3B,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAV,IAAqBD,CAAC,CAACE,MAAF,CAASC,KAAlC,EAAyC;AACvCC,MAAAA,YAAY,CAACJ,CAAD,CAAZ;AACD;AACF,GAJD;;AAKA,QAAMI,YAAY,GAAIJ,CAAD,IAAO;AAC1B,UAAMK,OAAO,GAAG;AACdnB,MAAAA,EAAE,EAAEF,KAAK,CAACsB,MAAN,GAAe,CADL;AAEdjB,MAAAA,IAAI,EAAE,KAFQ;AAGdD,MAAAA,IAAI,EAAEY,CAAC,CAACE,MAAF,CAASC;AAHD,KAAhB;AAKA,UAAMX,QAAQ,GAAG,CAAC,GAAGR,KAAJ,EAAWqB,OAAX,CAAjB;AACApB,IAAAA,QAAQ,CAACO,QAAD,CAAR;AACAF,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GATD;;AAWA,sBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACsB,MAAN,KAAiB,CAAjB,iBACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,CAFJ,eAME,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,KAAK,CAACuB,GAAN,CAAWZ,IAAD,iBACT,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACT,EADZ;AAEE,IAAA,IAAI,EAAES,IAFR;AAGE,IAAA,WAAW,EAAEG,WAHf;AAIE,IAAA,YAAY,EAAEP,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CANF,CADF,CAFF,EAuBGP,KAAK,CAACsB,MAAN,gBACC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAET,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,cADF,CADD,GAQC,EA/BJ,CADF;AAoCD,CA5ED;;AA8EA,eAAed,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport {\n  TrashIcon,\n  AppContainer,\n  Heading,\n  SearchContainer,\n  Container,\n  Table,\n  ClearAllContainer,\n  ClearAll,\n  Regular,\n  EmptyPrompt,\n  EmptySpace,\n} from './elements'\nimport ListItem from './ListItem'\n\nconst BugList = () => {\n  const [items, setItems] = useState([\n    { id: 1, state: true, text: 'Get up early' },\n    { id: 2, state: true, text: 'Do some meditation' },\n    { id: 3, state: false, text: 'Eat a healthy breakfast' },\n    { id: 4, state: false, text: 'Drink plenty of water' },\n    { id: 5, done: false, text: 'Exercise' },\n    { id: 6, done: false, text: 'Have fun' },\n  ])\n  const [text, setText] = useState('')\n  const trashHandler = (id) => {\n    const newItems = [...items]\n    const itemIndex = newItems.findIndex((item) => item.id === id)\n    newItems.splice(itemIndex, 1)\n    setItems(newItems)\n  }\n  const trashAllHandler = () => setItems([])\n\n  const tickHandler = (id) => {\n    const newItems = [...items]\n    const itemIndex = newItems.findIndex((item) => item.id === id)\n    newItems[itemIndex].done = !newItems[itemIndex].done\n    setItems(newItems)\n  }\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && e.target.value) {\n      inputHandler(e)\n    }\n  }\n  const inputHandler = (e) => {\n    const newItem = {\n      id: items.length + 1,\n      done: false,\n      text: e.target.value,\n    }\n    const newItems = [...items, newItem]\n    setItems(newItems)\n    setText('')\n  }\n\n  return (\n    <AppContainer>\n      <Heading>Reports</Heading>\n      <SearchContainer>\n        <Container>\n          {items.length === 0 && (\n            <EmptyPrompt>\n              <Regular>Add some things to your to do list!</Regular>\n            </EmptyPrompt>\n          )}\n          <Table>\n            <tbody>\n              {items.map((item) => (\n                <ListItem\n                  key={item.id}\n                  item={item}\n                  tickHandler={tickHandler}\n                  trashHandler={trashHandler}\n                />\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n      </SearchContainer>\n      {items.length ? (\n        <ClearAllContainer>\n          <ClearAll onClick={trashAllHandler}>\n            <TrashIcon />\n            Clear all\n          </ClearAll>\n        </ClearAllContainer>\n      ) : (\n        ''\n      )}\n    </AppContainer>\n  )\n}\n\nexport default BugList\n"]},"metadata":{},"sourceType":"module"}