{"ast":null,"code":"import _toConsumableArray from\"/Users/Angelique/Desktop/AnGeLiQuE/Spiced Academy/repositories/coding_challenges/mckinsey/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/Angelique/Desktop/AnGeLiQuE/Spiced Academy/repositories/coding_challenges/mckinsey/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{AppContainer,Heading,TableContainer,Table,ClearAllContainer,ClearAll,Regular,TrashIcon}from'./elements';import ListItem from'./ListItem';var BugList=function BugList(){var _useState=useState([{id:1,state:false,type:'Spam',text:'Get up early'},{id:2,state:false,type:'Spam',text:'Do some meditation'},{id:3,state:false,type:'Spam',text:'Eat a healthy breakfast'},{id:4,state:false,type:'Spam',text:'Drink plenty of water'}]),_useState2=_slicedToArray(_useState,2),items=_useState2[0],setItems=_useState2[1];var blockHandler=function blockHandler(id){//api call to block {...}\n//front end part:\nvar newItems=_toConsumableArray(items);var itemIndex=newItems.findIndex(function(item){return item.id===id;});newItems.splice(itemIndex,1);setItems(newItems);};var resolveHandler=function resolveHandler(id){//api call to resolve {...}\n//front end part:\nvar newItems=_toConsumableArray(items);var itemIndex=newItems.findIndex(function(item){return item.id===id;});newItems[itemIndex].state=!newItems[itemIndex].state;setItems(newItems);};var trashAllHandler=function trashAllHandler(){return setItems([]);};return/*#__PURE__*/React.createElement(AppContainer,null,/*#__PURE__*/React.createElement(Heading,null,\"Reports\"),/*#__PURE__*/React.createElement(TableContainer,null,items.length===0?/*#__PURE__*/React.createElement(Regular,null,\"No bugs!\"):/*#__PURE__*/React.createElement(Table,null,/*#__PURE__*/React.createElement(\"tbody\",null,items.map(function(item){return/*#__PURE__*/React.createElement(ListItem,{key:item.id,item:item,resolveHandler:resolveHandler,blockHandler:blockHandler});})))),items.length?/*#__PURE__*/React.createElement(ClearAllContainer,null,/*#__PURE__*/React.createElement(ClearAll,{onClick:trashAllHandler},/*#__PURE__*/React.createElement(TrashIcon,null),\"Clear all\")):'');};export default BugList;","map":{"version":3,"sources":["/Users/Angelique/Desktop/AnGeLiQuE/Spiced Academy/repositories/coding_challenges/mckinsey/src/components/BugList.js"],"names":["React","useState","AppContainer","Heading","TableContainer","Table","ClearAllContainer","ClearAll","Regular","TrashIcon","ListItem","BugList","id","state","type","text","items","setItems","blockHandler","newItems","itemIndex","findIndex","item","splice","resolveHandler","trashAllHandler","length","map"],"mappings":"waAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OACEC,YADF,CAEEC,OAFF,CAGEC,cAHF,CAIEC,KAJF,CAKEC,iBALF,CAMEC,QANF,CAOEC,OAPF,CAQEC,SARF,KASO,YATP,CAUA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,eACMV,QAAQ,CAAC,CACjC,CAAEW,EAAE,CAAE,CAAN,CAASC,KAAK,CAAE,KAAhB,CAAuBC,IAAI,CAAE,MAA7B,CAAqCC,IAAI,CAAE,cAA3C,CADiC,CAEjC,CAAEH,EAAE,CAAE,CAAN,CAASC,KAAK,CAAE,KAAhB,CAAuBC,IAAI,CAAE,MAA7B,CAAqCC,IAAI,CAAE,oBAA3C,CAFiC,CAGjC,CAAEH,EAAE,CAAE,CAAN,CAASC,KAAK,CAAE,KAAhB,CAAuBC,IAAI,CAAE,MAA7B,CAAqCC,IAAI,CAAE,yBAA3C,CAHiC,CAIjC,CAAEH,EAAE,CAAE,CAAN,CAASC,KAAK,CAAE,KAAhB,CAAuBC,IAAI,CAAE,MAA7B,CAAqCC,IAAI,CAAE,uBAA3C,CAJiC,CAAD,CADd,wCACbC,KADa,eACNC,QADM,eAQpB,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACN,EAAD,CAAQ,CAC3B;AAEA;AACA,GAAMO,CAAAA,QAAQ,oBAAOH,KAAP,CAAd,CACA,GAAMI,CAAAA,SAAS,CAAGD,QAAQ,CAACE,SAAT,CAAmB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACV,EAAL,GAAYA,EAAtB,EAAnB,CAAlB,CACAO,QAAQ,CAACI,MAAT,CAAgBH,SAAhB,CAA2B,CAA3B,EACAH,QAAQ,CAACE,QAAD,CAAR,CACD,CARD,CAUA,GAAMK,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACZ,EAAD,CAAQ,CAC7B;AAEA;AACA,GAAMO,CAAAA,QAAQ,oBAAOH,KAAP,CAAd,CACA,GAAMI,CAAAA,SAAS,CAAGD,QAAQ,CAACE,SAAT,CAAmB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACV,EAAL,GAAYA,EAAtB,EAAnB,CAAlB,CACAO,QAAQ,CAACC,SAAD,CAAR,CAAoBP,KAApB,CAA4B,CAACM,QAAQ,CAACC,SAAD,CAAR,CAAoBP,KAAjD,CACAI,QAAQ,CAACE,QAAD,CAAR,CACD,CARD,CAUA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,SAAMR,CAAAA,QAAQ,CAAC,EAAD,CAAd,EAAxB,CAEA,mBACE,oBAAC,YAAD,mBACE,oBAAC,OAAD,gBADF,cAEE,oBAAC,cAAD,MACGD,KAAK,CAACU,MAAN,GAAiB,CAAjB,cACC,oBAAC,OAAD,iBADD,cAGC,oBAAC,KAAD,mBACE,iCACGV,KAAK,CAACW,GAAN,CAAU,SAACL,IAAD,qBACT,oBAAC,QAAD,EACE,GAAG,CAAEA,IAAI,CAACV,EADZ,CAEE,IAAI,CAAEU,IAFR,CAGE,cAAc,CAAEE,cAHlB,CAIE,YAAY,CAAEN,YAJhB,EADS,EAAV,CADH,CADF,CAJJ,CAFF,CAoBGF,KAAK,CAACU,MAAN,cACC,oBAAC,iBAAD,mBACE,oBAAC,QAAD,EAAU,OAAO,CAAED,eAAnB,eACE,oBAAC,SAAD,MADF,aADF,CADD,CAQC,EA5BJ,CADF,CAiCD,CA/DD,CAiEA,cAAed,CAAAA,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport {\n  AppContainer,\n  Heading,\n  TableContainer,\n  Table,\n  ClearAllContainer,\n  ClearAll,\n  Regular,\n  TrashIcon,\n} from './elements'\nimport ListItem from './ListItem'\n\nconst BugList = () => {\n  const [items, setItems] = useState([\n    { id: 1, state: false, type: 'Spam', text: 'Get up early' },\n    { id: 2, state: false, type: 'Spam', text: 'Do some meditation' },\n    { id: 3, state: false, type: 'Spam', text: 'Eat a healthy breakfast' },\n    { id: 4, state: false, type: 'Spam', text: 'Drink plenty of water' },\n  ])\n\n  const blockHandler = (id) => {\n    //api call to block {...}\n\n    //front end part:\n    const newItems = [...items]\n    const itemIndex = newItems.findIndex((item) => item.id === id)\n    newItems.splice(itemIndex, 1)\n    setItems(newItems)\n  }\n\n  const resolveHandler = (id) => {\n    //api call to resolve {...}\n\n    //front end part:\n    const newItems = [...items]\n    const itemIndex = newItems.findIndex((item) => item.id === id)\n    newItems[itemIndex].state = !newItems[itemIndex].state\n    setItems(newItems)\n  }\n\n  const trashAllHandler = () => setItems([])\n\n  return (\n    <AppContainer>\n      <Heading>Reports</Heading>\n      <TableContainer>\n        {items.length === 0 ? (\n          <Regular>No bugs!</Regular>\n        ) : (\n          <Table>\n            <tbody>\n              {items.map((item) => (\n                <ListItem\n                  key={item.id}\n                  item={item}\n                  resolveHandler={resolveHandler}\n                  blockHandler={blockHandler}\n                />\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </TableContainer>\n      {items.length ? (\n        <ClearAllContainer>\n          <ClearAll onClick={trashAllHandler}>\n            <TrashIcon />\n            Clear all\n          </ClearAll>\n        </ClearAllContainer>\n      ) : (\n        ''\n      )}\n    </AppContainer>\n  )\n}\n\nexport default BugList\n"]},"metadata":{},"sourceType":"module"}