{"ast":null,"code":"var _jsxFileName = \"/Users/Angelique/Desktop/AnGeLiQuE/Spiced Academy/repositories/coding_challenges/mckinsey/client/src/components/BugList.js\";\nimport React, { useState } from 'react';\nimport { AppContainer, Heading, TableContainer, Table, ClearAllContainer, ClearAll, Regular, TrashIcon } from './elements';\nimport ListItem from './ListItem';\nimport axios from 'axios';\n\nconst BugList = ({\n  reports\n}) => {\n  const [items, setItems] = useState(reports);\n\n  const blockHandler = id => {//api call to block {...}\n    // front end part:\n    // const newItems = [...items]\n    // const itemIndex = newItems.findIndex((item) => item.id === id)\n    // newItems.splice(itemIndex, 1)\n    // setItems(newItems)\n  };\n\n  const resolveHandler = reportId => {\n    //api call to resolve {...}\n    axios.put('/reports/:reportId', {\n      reportId: reportId\n    }).then(data => console.log('getting them', data.reports) // setItems(data.reports)\n    ); //front end part:\n    // const newItems = [...items]\n    // const itemIndex = newItems.findIndex((item) => item.reportId === reportId)\n    // newItems[itemIndex].state = !newItems[itemIndex].state\n    // setItems(newItems)\n  };\n\n  const trashAllHandler = () => setItems([]);\n\n  return /*#__PURE__*/React.createElement(AppContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Reports\"), /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, items.length === 0 ? /*#__PURE__*/React.createElement(Regular, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"No bugs!\") : /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(ListItem, {\n    key: item.id,\n    item: item,\n    resolveHandler: resolveHandler,\n    blockHandler: blockHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }))))), items.length ? /*#__PURE__*/React.createElement(ClearAllContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ClearAll, {\n    onClick: trashAllHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TrashIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), \"Clear all\")) : '');\n};\n\nexport default BugList;","map":{"version":3,"sources":["/Users/Angelique/Desktop/AnGeLiQuE/Spiced Academy/repositories/coding_challenges/mckinsey/client/src/components/BugList.js"],"names":["React","useState","AppContainer","Heading","TableContainer","Table","ClearAllContainer","ClearAll","Regular","TrashIcon","ListItem","axios","BugList","reports","items","setItems","blockHandler","id","resolveHandler","reportId","put","then","data","console","log","trashAllHandler","length","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,YADF,EAEEC,OAFF,EAGEC,cAHF,EAIEC,KAJF,EAKEC,iBALF,EAMEC,QANF,EAOEC,OAPF,EAQEC,SARF,QASO,YATP;AAUA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACY,OAAD,CAAlC;;AAEA,QAAMG,YAAY,GAAIC,EAAD,IAAQ,CAC3B;AACA;AACA;AACA;AACA;AACA;AACD,GAPD;;AASA,QAAMC,cAAc,GAAIC,QAAD,IAAc;AACnC;AACAR,IAAAA,KAAK,CAACS,GAAN,CAAU,oBAAV,EAAgC;AAAED,MAAAA,QAAQ,EAAEA;AAAZ,KAAhC,EAAwDE,IAAxD,CACGC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,IAAI,CAACT,OAAjC,CADZ,CAEE;AAFF,MAFmC,CAMnC;AACA;AACA;AACA;AACA;AACD,GAXD;;AAaA,QAAMY,eAAe,GAAG,MAAMV,QAAQ,CAAC,EAAD,CAAtC;;AAEA,sBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACY,MAAN,KAAiB,CAAjB,gBACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,KAAK,CAACa,GAAN,CAAWC,IAAD,iBACT,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACX,EADZ;AAEE,IAAA,IAAI,EAAEW,IAFR;AAGE,IAAA,cAAc,EAAEV,cAHlB;AAIE,IAAA,YAAY,EAAEF,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CAJJ,CAFF,EAoBGF,KAAK,CAACY,MAAN,gBACC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAED,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,cADF,CADD,GAQC,EA5BJ,CADF;AAiCD,CA5DD;;AA8DA,eAAeb,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport {\n  AppContainer,\n  Heading,\n  TableContainer,\n  Table,\n  ClearAllContainer,\n  ClearAll,\n  Regular,\n  TrashIcon,\n} from './elements'\nimport ListItem from './ListItem'\nimport axios from 'axios'\n\nconst BugList = ({ reports }) => {\n  const [items, setItems] = useState(reports)\n\n  const blockHandler = (id) => {\n    //api call to block {...}\n    // front end part:\n    // const newItems = [...items]\n    // const itemIndex = newItems.findIndex((item) => item.id === id)\n    // newItems.splice(itemIndex, 1)\n    // setItems(newItems)\n  }\n\n  const resolveHandler = (reportId) => {\n    //api call to resolve {...}\n    axios.put('/reports/:reportId', { reportId: reportId }).then(\n      (data) => console.log('getting them', data.reports)\n      // setItems(data.reports)\n    )\n    //front end part:\n    // const newItems = [...items]\n    // const itemIndex = newItems.findIndex((item) => item.reportId === reportId)\n    // newItems[itemIndex].state = !newItems[itemIndex].state\n    // setItems(newItems)\n  }\n\n  const trashAllHandler = () => setItems([])\n\n  return (\n    <AppContainer>\n      <Heading>Reports</Heading>\n      <TableContainer>\n        {items.length === 0 ? (\n          <Regular>No bugs!</Regular>\n        ) : (\n          <Table>\n            <tbody>\n              {items.map((item) => (\n                <ListItem\n                  key={item.id}\n                  item={item}\n                  resolveHandler={resolveHandler}\n                  blockHandler={blockHandler}\n                />\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </TableContainer>\n      {items.length ? (\n        <ClearAllContainer>\n          <ClearAll onClick={trashAllHandler}>\n            <TrashIcon />\n            Clear all\n          </ClearAll>\n        </ClearAllContainer>\n      ) : (\n        ''\n      )}\n    </AppContainer>\n  )\n}\n\nexport default BugList\n"]},"metadata":{},"sourceType":"module"}