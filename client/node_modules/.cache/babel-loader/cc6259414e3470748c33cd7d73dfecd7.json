{"ast":null,"code":"var _jsxFileName = \"/Users/Angelique/Desktop/AnGeLiQuE/Spiced Academy/repositories/coding_challenges/mckinsey/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport BugList from './components/BugList';\n\nfunction App() {\n  const [data, setData] = useState({}); // useEffect(async () => {\n  //   const result = await axios.get('/getReports')\n  //   setData(result.data)\n  // }, [])\n\n  useEffect(async () => {\n    axios.get('/getReports');\n    setData(result.data);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }, data && /*#__PURE__*/React.createElement(BugList, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 40\n    }\n  }));\n}\n\nexport default App; // import React, { Component } from 'react'\n// import logo from './logo.svg'\n// import './App.css'\n// class App extends Component {\n//   state = {\n//     response: '',\n//     post: '',\n//     responseToPost: '',\n//   }\n//   componentDidMount() {\n//     this.callApi()\n//       .then((res) => this.setState({ response: res.express }))\n//       .catch((err) => console.log(err))\n//   }\n//   callApi = async () => {\n//     const response = await fetch('/api/hello')\n//     const body = await response.json()\n//     if (response.status !== 200) throw Error(body.message)\n//     return body\n//   }\n//   handleSubmit = async (e) => {\n//     e.preventDefault()\n//     const response = await fetch('/api/world', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ post: this.state.post }),\n//     })\n//     const body = await response.text()\n//     this.setState({ responseToPost: body })\n//   }\n//   render() {\n//     console.log(this.state)\n//     return (\n//       <div className=\"App\">\n//         <p>Response: {this.state.response}</p>\n//         <form onSubmit={this.handleSubmit}>\n//           <p>\n//             <strong>Post to Server:</strong>\n//           </p>\n//           <input\n//             type=\"text\"\n//             value={this.state.post}\n//             onChange={(e) => this.setState({ post: e.target.value })}\n//           />\n//           <button type=\"submit\">Submit</button>\n//         </form>\n//         <p>{this.state.responseToPost}</p>\n//       </div>\n//     )\n//   }\n// }\n// export default App","map":{"version":3,"sources":["/Users/Angelique/Desktop/AnGeLiQuE/Spiced Academy/repositories/coding_challenges/mckinsey/client/src/App.js"],"names":["React","useState","useEffect","axios","BugList","App","data","setData","get","result"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC,CADa,CAGb;AACA;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,YAAY;AACrBC,IAAAA,KAAK,CAACK,GAAN,CAAU,aAAV;AACCD,IAAAA,OAAO,CAACE,MAAM,CAACH,IAAR,CAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBA,IAAI,iBAAI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,CAAP;AACD;;AAED,eAAeD,GAAf,C,CACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport './App.css'\n\nimport BugList from './components/BugList'\n\nfunction App() {\n  const [data, setData] = useState({})\n\n  // useEffect(async () => {\n  //   const result = await axios.get('/getReports')\n  //   setData(result.data)\n  // }, [])\n\n  useEffect(async () => {\n   axios.get('/getReports')\n    setData(result.data)\n  }, [])\n\n  return <div className=\"App\">{data && <BugList data={data} />}</div>\n}\n\nexport default App\n// import React, { Component } from 'react'\n\n// import logo from './logo.svg'\n\n// import './App.css'\n\n// class App extends Component {\n//   state = {\n//     response: '',\n//     post: '',\n//     responseToPost: '',\n//   }\n\n//   componentDidMount() {\n//     this.callApi()\n//       .then((res) => this.setState({ response: res.express }))\n//       .catch((err) => console.log(err))\n//   }\n\n//   callApi = async () => {\n//     const response = await fetch('/api/hello')\n//     const body = await response.json()\n//     if (response.status !== 200) throw Error(body.message)\n\n//     return body\n//   }\n\n//   handleSubmit = async (e) => {\n//     e.preventDefault()\n//     const response = await fetch('/api/world', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ post: this.state.post }),\n//     })\n//     const body = await response.text()\n\n//     this.setState({ responseToPost: body })\n//   }\n\n//   render() {\n//     console.log(this.state)\n//     return (\n//       <div className=\"App\">\n//         <p>Response: {this.state.response}</p>\n//         <form onSubmit={this.handleSubmit}>\n//           <p>\n//             <strong>Post to Server:</strong>\n//           </p>\n//           <input\n//             type=\"text\"\n//             value={this.state.post}\n//             onChange={(e) => this.setState({ post: e.target.value })}\n//           />\n//           <button type=\"submit\">Submit</button>\n//         </form>\n//         <p>{this.state.responseToPost}</p>\n//       </div>\n//     )\n//   }\n// }\n\n// export default App\n"]},"metadata":{},"sourceType":"module"}