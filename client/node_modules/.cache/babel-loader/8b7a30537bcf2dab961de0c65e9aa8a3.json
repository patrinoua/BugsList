{"ast":null,"code":"var _jsxFileName = \"/Users/Angelique/Desktop/AnGeLiQuE/Spiced Academy/repositories/coding_challenges/mckinsey/client/src/components/BugList.js\";\nimport React, { useState } from 'react';\nimport { AppContainer, Heading, TableContainer, Table, ClearAllContainer, ClearAll, Regular, TrashIcon } from './elements';\nimport ListItem from './ListItem'; // const callApi = async () => {\n//   const response = await fetch('/api/hello')\n//   const body = await response.json()\n//   if (response.status !== 200) throw Error(body.message)\n//   return body\n// }\n\nconst BugList = () => {\n  const [items, setItems] = useState([{\n    id: 1,\n    state: false,\n    type: 'Spam',\n    text: 'Get up early'\n  }, {\n    id: 2,\n    state: false,\n    type: 'Spam',\n    text: 'Do some meditation'\n  }, {\n    id: 3,\n    state: false,\n    type: 'Spam',\n    text: 'Eat a healthy breakfast'\n  }, {\n    id: 4,\n    state: false,\n    type: 'Spam',\n    text: 'Drink plenty of water'\n  }]);\n\n  const blockHandler = id => {\n    //api call to block {...}\n    //front end part:\n    const newItems = [...items];\n    const itemIndex = newItems.findIndex(item => item.id === id);\n    newItems.splice(itemIndex, 1);\n    setItems(newItems);\n  };\n\n  const resolveHandler = id => {\n    //api call to resolve {...}\n    //front end part:\n    const newItems = [...items];\n    const itemIndex = newItems.findIndex(item => item.id === id);\n    newItems[itemIndex].state = !newItems[itemIndex].state;\n    setItems(newItems);\n  };\n\n  const trashAllHandler = () => setItems([]);\n\n  return /*#__PURE__*/React.createElement(AppContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Reports\"), /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, items.length === 0 ? /*#__PURE__*/React.createElement(Regular, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"No bugs!\") : /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(ListItem, {\n    key: item.id,\n    item: item,\n    resolveHandler: resolveHandler,\n    blockHandler: blockHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }))))), items.length ? /*#__PURE__*/React.createElement(ClearAllContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ClearAll, {\n    onClick: trashAllHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TrashIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), \"Clear all\")) : '');\n};\n\nexport default BugList;","map":{"version":3,"sources":["/Users/Angelique/Desktop/AnGeLiQuE/Spiced Academy/repositories/coding_challenges/mckinsey/client/src/components/BugList.js"],"names":["React","useState","AppContainer","Heading","TableContainer","Table","ClearAllContainer","ClearAll","Regular","TrashIcon","ListItem","BugList","items","setItems","id","state","type","text","blockHandler","newItems","itemIndex","findIndex","item","splice","resolveHandler","trashAllHandler","length","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {\n  AppContainer,\n  Heading,\n  TableContainer,\n  Table,\n  ClearAllContainer,\n  ClearAll,\n  Regular,\n  TrashIcon,\n} from './elements'\nimport ListItem from './ListItem'\n\n// const callApi = async () => {\n//   const response = await fetch('/api/hello')\n//   const body = await response.json()\n//   if (response.status !== 200) throw Error(body.message)\n//   return body\n// }\nconst BugList = () => {\n  const [items, setItems] = useState([\n    { id: 1, state: false, type: 'Spam', text: 'Get up early' },\n    { id: 2, state: false, type: 'Spam', text: 'Do some meditation' },\n    { id: 3, state: false, type: 'Spam', text: 'Eat a healthy breakfast' },\n    { id: 4, state: false, type: 'Spam', text: 'Drink plenty of water' },\n  ])\n\n  const blockHandler = (id) => {\n    //api call to block {...}\n\n    //front end part:\n    const newItems = [...items]\n    const itemIndex = newItems.findIndex((item) => item.id === id)\n    newItems.splice(itemIndex, 1)\n    setItems(newItems)\n  }\n\n  const resolveHandler = (id) => {\n    //api call to resolve {...}\n\n    //front end part:\n    const newItems = [...items]\n    const itemIndex = newItems.findIndex((item) => item.id === id)\n    newItems[itemIndex].state = !newItems[itemIndex].state\n    setItems(newItems)\n  }\n\n  const trashAllHandler = () => setItems([])\n\n  return (\n    <AppContainer>\n      <Heading>Reports</Heading>\n      <TableContainer>\n        {items.length === 0 ? (\n          <Regular>No bugs!</Regular>\n        ) : (\n          <Table>\n            <tbody>\n              {items.map((item) => (\n                <ListItem\n                  key={item.id}\n                  item={item}\n                  resolveHandler={resolveHandler}\n                  blockHandler={blockHandler}\n                />\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </TableContainer>\n      {items.length ? (\n        <ClearAllContainer>\n          <ClearAll onClick={trashAllHandler}>\n            <TrashIcon />\n            Clear all\n          </ClearAll>\n        </ClearAllContainer>\n      ) : (\n        ''\n      )}\n    </AppContainer>\n  )\n}\n\nexport default BugList\n"]},"metadata":{},"sourceType":"module"}