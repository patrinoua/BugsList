{"ast":null,"code":"var _jsxFileName = \"/Users/Angelique/Desktop/AnGeLiQuE/Spiced Academy/repositories/coding_challenges/mckinsey/client/src/App.js\";\nimport React, { // useState,\nuseEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport BugList from './components/BugList';\n\nfunction App() {\n  const [data, setData] = useState({\n    hits: []\n  });\n  useEffect(async () => {\n    const result = await axios.get('/api/hello');\n    console.log(result.data);\n    console.log('whooop?'); // setData(result.data)\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BugList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App; // import React, { Component } from 'react'\n// import logo from './logo.svg'\n// import './App.css'\n// class App extends Component {\n//   state = {\n//     response: '',\n//     post: '',\n//     responseToPost: '',\n//   }\n//   componentDidMount() {\n//     this.callApi()\n//       .then((res) => this.setState({ response: res.express }))\n//       .catch((err) => console.log(err))\n//   }\n//   callApi = async () => {\n//     const response = await fetch('/api/hello')\n//     const body = await response.json()\n//     if (response.status !== 200) throw Error(body.message)\n//     return body\n//   }\n//   handleSubmit = async (e) => {\n//     e.preventDefault()\n//     const response = await fetch('/api/world', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ post: this.state.post }),\n//     })\n//     const body = await response.text()\n//     this.setState({ responseToPost: body })\n//   }\n//   render() {\n//     console.log(this.state)\n//     return (\n//       <div className=\"App\">\n//         <p>Response: {this.state.response}</p>\n//         <form onSubmit={this.handleSubmit}>\n//           <p>\n//             <strong>Post to Server:</strong>\n//           </p>\n//           <input\n//             type=\"text\"\n//             value={this.state.post}\n//             onChange={(e) => this.setState({ post: e.target.value })}\n//           />\n//           <button type=\"submit\">Submit</button>\n//         </form>\n//         <p>{this.state.responseToPost}</p>\n//       </div>\n//     )\n//   }\n// }\n// export default App","map":{"version":3,"sources":["/Users/Angelique/Desktop/AnGeLiQuE/Spiced Academy/repositories/coding_challenges/mckinsey/client/src/App.js"],"names":["React","useEffect","axios","BugList","App","data","setData","useState","hits","result","get","console","log"],"mappings":";AAAA,OAAOA,KAAP,IACE;AACAC,SAFF,QAGO,OAHP;AAIA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAhC;AAEAP,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMQ,MAAM,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,YAAV,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACJ,IAAnB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAHoB,CAIpB;AACD,GALQ,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,eAAeR,GAAf,C,CACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, {\n  // useState,\n  useEffect,\n} from 'react'\nimport axios from 'axios'\nimport './App.css'\n\nimport BugList from './components/BugList'\n\nfunction App() {\n  const [data, setData] = useState({ hits: [] })\n\n  useEffect(async () => {\n    const result = await axios.get('/api/hello')\n    console.log(result.data)\n    console.log('whooop?')\n    // setData(result.data)\n  })\n\n  return (\n    <div className=\"App\">\n      <BugList />\n    </div>\n  )\n}\n\nexport default App\n// import React, { Component } from 'react'\n\n// import logo from './logo.svg'\n\n// import './App.css'\n\n// class App extends Component {\n//   state = {\n//     response: '',\n//     post: '',\n//     responseToPost: '',\n//   }\n\n//   componentDidMount() {\n//     this.callApi()\n//       .then((res) => this.setState({ response: res.express }))\n//       .catch((err) => console.log(err))\n//   }\n\n//   callApi = async () => {\n//     const response = await fetch('/api/hello')\n//     const body = await response.json()\n//     if (response.status !== 200) throw Error(body.message)\n\n//     return body\n//   }\n\n//   handleSubmit = async (e) => {\n//     e.preventDefault()\n//     const response = await fetch('/api/world', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ post: this.state.post }),\n//     })\n//     const body = await response.text()\n\n//     this.setState({ responseToPost: body })\n//   }\n\n//   render() {\n//     console.log(this.state)\n//     return (\n//       <div className=\"App\">\n//         <p>Response: {this.state.response}</p>\n//         <form onSubmit={this.handleSubmit}>\n//           <p>\n//             <strong>Post to Server:</strong>\n//           </p>\n//           <input\n//             type=\"text\"\n//             value={this.state.post}\n//             onChange={(e) => this.setState({ post: e.target.value })}\n//           />\n//           <button type=\"submit\">Submit</button>\n//         </form>\n//         <p>{this.state.responseToPost}</p>\n//       </div>\n//     )\n//   }\n// }\n\n// export default App\n"]},"metadata":{},"sourceType":"module"}